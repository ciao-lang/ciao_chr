:- module(_typesmodes,[typesmodes/0]).

%% Ciao begin
:- use_package(chr).
%% Ciao end

%-----------------------------------------------------------
:- chr_constraint foo/3, foo(+int,-any,(?test)), bar/3, bar(?,-,+generic(test)), baz.

:- chr_type test --->  qux(test) ; quux ; quuux.
:- chr_type generic(X) ---> blah(X) ; bloh(X).

rule1 @ foo(blah,_,_) <=> impossible.
rule2 @ foo(-43,_,qux(qux(quux))) <=> possible.
rule3 @ foo(_,_,qux(qux(_))) <=> possible.
rule4 @ foo(_,_,qux(qux(weird_atom))) <=> impossible.
rule5 @ foo(X,_,_) <=> var(X) | impossible.

rule6 @ bar(_,_,bleh(quuux)) <=> impossible.
rule7 @ bar(_,_,blah(qux(qux(quuux)))) <=> possible.
rule8 @ bar(_,_,blah(qux(qux(quux)))) <=> possible.
rule9 @ bar(_,_,blah(qux(qux(qux(_))))) <=> possible.
rule10 @ bar(_,_,blah(qux(qux(_)))) <=> impossible.
%-----------------------------------------------------------

typesmodes.
